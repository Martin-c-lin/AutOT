Try to make a single API on which one can build other applications.
Have c_p as input to the different threads and put the threads in separate files.
EX - temperature thread in temperature_controller file.

Make it possible to build different applications on using these basic building blocks.

Consider splitting c_p into different subdictionaries, one per thread.
Then we would have for instance c_p_temperature(),c_p_camera etc

Add manual controls of shutter, set shutter open time and open shutter.
Also add ... to it

Manual control of piezos/steppers? Have user press on screen where the
laser should be moved to?

Investigate if I can replace c_p with something similar to events for the
threads.

Make it so that stepper and "normal motors" implement the same interface


Exception in thread Thread-camera:
Traceback (most recent call last):
  File "C:\Users\Feynman\Anaconda3\lib\threading.py", line 917, in _bootstrap_inner
    self.run()
  File "C:\Martin\AutOT\CameraControls.py", line 240, in run
    self.thorlabs_capture()
  File "C:\Martin\AutOT\CameraControls.py", line 138, in thorlabs_capture
    outfile = open(experiment_info_name, 'wb')
FileNotFoundError: [Errno 2] No such file or directory: 'F:/Martin/D2020-11-10/data-11-2-42'
