Try to make a single API on which one can build other applications.

Add possibility to "home" motors to a presaved location.

Make it possible to build different applications on using these basic building blocks.

Consider splitting c_p into different subdictionaries, one per thread.
Then we would have for instance c_p_temperature(),c_p_camera etc
Could make each thread add its necessary parameters to c_p itself.

Investigate if I can replace c_p with something similar to events for the
threads.

Make it so that stepper and "normal motors" implement the same interface
For this I could have a common motor class and just have different methods for
connecting the motors themselves.
Suspect that the piezos will have to be handled differently.


Simplify and unify the naming in the c_p. For instance; replace
motor_starting_position with motorStartPos.

Move ExperimentControlThread into a spearate file similar to what I did with the
 QD_tracking. stepper_target_position -> stepTargPos

 Rewrite some of the functions which takes tons of c_p as input to use **kwargs
 instead.

Make camera model class
